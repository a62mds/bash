#!/bin/bash
##
# Creates a new Python project directory with basic setup.py, <project-name>.py,
# and <project-name>_tests.py files
#
# usage:
#   newPythonProject <project-name>
# -> if project-name is not provided, prints usage info and exits with status 2
##

##
# Function definitions

# prints usage information to stderr
printusage() {
	echo "Usage: newPythonProject <project-name>" >&2
}

# Generate file only if it does not already exist
#   usage:
#     condgenfile {setup|mainpy|nose} <filename>
condgenfile() {
	if [ -f "$2" ]; then
		echo "Not overwriting existing file $2"
	else
		echo "Creating file $2"
		case "$1" in
		  setup)
				gensetup "$2"
				;;
			mainpy)
				genmainpy "$2"
				;;
			nose)
				gennosefile "$2"
				;;
			*)
				echo "Check parameters passed to condgenfile" >&2
				exit 2
				;;
		esac
	fi
}

# Write setup.py file
gensetup() {
echo "#!/usr/bin/env python
# $1

try:
    from setuptools import setup
except ImportError:
    from distutils.core import setup

config = {
    'description': '<++>',
    'author': '<++>',
    'url': '<++>',
    'download_url': '<++>',
    'author_email': '<++>',
    'version': '<++>',
    'install_requires': ['nose,<++>'],
    'packages': ['$PROJ_NAME'],
    'scripts': ['<++>'],
    'name': '$PROJ_NAME'
}

setup(**config)

#EOF" >> "$1"
}

# Write basic main .py file
genmainpy() {
echo "#!/usr/bin/env python
# $1

<++>import <++>


<++>


def main():
    <++>


if __name__=='__main__':
    main()


#EOF" >> "$1"
}

# Write basic nosetest file
gennosefile() {
echo "#!/usr/bin/env python
# $1

from nose.tools import *
import "$F_MAIN_PY"


def setup():
    print(\"Setting up\")


def teardown():
    print(\"Tearing down\")


def test_basic():
    print(\"Basic test\")


#EOF" >> "$1"
}
## 

##=============================================================================
# Script starts here

# Ensure project name has been provided
if [ $# -ne 1 ]; then
  printusage
  exit 2
else
  PROJ_NAME="$@"
fi

# Directories
DIR_BIN=bin
DIR_DOCS=docs
DIR_MAIN="$PROJ_NAME"
DIR_TESTS=tests

# Files
F_SETUP_PY=setup.py
F_MAIN_PY="$DIR_MAIN"/"$PROJ_NAME".py
F_MAIN_TESTS_PY="$DIR_TESTS"/"$1"_tests.py


# Create directory structure
mkdir -p "$DIR_BIN" \
         "$DIR_DOCS" \
         "$DIR_MAIN" \
         "$DIR_TESTS"

# Create setup.py file if it doesn't already exist
condgenfile setup "$F_SETUP_PY"

# Create <project-name>/<project-name>.py
condgenfile mainpy "$F_MAIN_PY"

# Create tests/<project-name>_tests.py
condgenfile nose "$F_MAIN_TESTS_PY"

echo "All done."
##
